# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Upload Python Package

on:
  - push

# on:
#   release:
#     types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Build
        run: |
          git fetch --tags --quiet
          export NEW_TAG=${{ github.event.release.tag_name }}
          echo "NEW TAG: ${NEW_TAG}"
          export LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "LATEST TAG: ${LATEST_TAG}"
          export GIT_BRANCH=${GITHUB_REF#refs/heads/}
          echo "GIT BRANCH: ${GIT_BRANCH}"
          export GIT_HASH=$(git rev-parse --short "$GITHUB_SHA")
          echo "GIT HASH: ${GIT_HASH}"
          export PYPI_PACKAGE_VERSION=${NEW_TAG:-${LATEST_TAG}+dev0.${GIT_BRANCH}.${GIT_HASH}}
          echo "RESOLVED VERSION: ${PYPI_PACKAGE_VERSION}"
          python -m build
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
      